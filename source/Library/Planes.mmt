namespace http://BenniDoes.Stuff/ ❚
import mitm http://mathhub.info/MitM/Foundation ❚
import arith http://mathhub.info/MitM/smglom/arithmetics ❚

theory Planes : http://mathhub.info/MitM/Foundation?Math =
    include ?Lines ❙
    include ?Triangle ❙
    include ?standartMathStuff ❙

    Plane : type  ❘ # P❙
    TriangleToPlane: Δ ⟶ P ❘ # PofΔ 1 ❙
    ParametrizedPlane: V ⟶ V ⟶ V ⟶ P ❘ # Ppara 1 2 3 ❙
    PointNormalPlane: V ⟶ V ⟶ P ❘ # Ppn 1 2 ❙

    PlaneNormal : P ⟶ V ❘ # Pnormal 1 prec 50❙
    PlaneBase : P ⟶ V ❘ # Pbase 1  prec 50❙

    PlaneBaseAxiom1 = {v, w, b } ⊦ Pbase (Ppara b v w ) ≐ b ❘ role ForwardRule❙

    normalAxiom1 = { v, w, b } ⊦ ( Pnormal ( Ppara b v w ) ) ≐ ( norm ( v Vcross w ) ) ❘ role ForwardRule ❙
    normalAxiom2 = { v, b } ⊦ ( Pnormal ( Ppn b v ) ) ≐ ( norm ( v ) ) ❘ role ForwardRule❙
    triangleAxiom =  { T } ⊦ ( PofΔ T ) ≐ Ppara ( _A T ) ( _A  T ⁻ _B T  ) ( _A  T ⁻ _B T)  ❘ role ForwardRule ❙

    pointOnPlane : V ⟶ P ⟶ bool ❘= [v , p] < Pnormal p , v ⁻ Pbase p > ≐  0  ❘ #  1 VonP 2 ❙
    lineOnPlane : L ⟶ P ⟶ bool ❘= [l,p ] ( ( Lbase l ) VonP p ) ∧  ( ( Lbase l ) ⁺ ( Ldir l ) ) VonP p ❘#  1 LonP 2 ❙

    LinePlaneCollisionPoint : { A, B } ( ⊦ Ldir A ⊥⊥ Pnormal B ) ⟶ V  ❘ # colPLV 1 2 3 ❙
    LinePlaneCollisionPointAxiom : {A , B, p1 } ⊦  ( colPLV  A B p1 ) VonP B   ∧  ( colPLV  A B p1 ) VonL A ❙

    parallelPlanes : P ⟶ P ⟶ bool ❘= [ p1 ,p2] ( Pnormal p1 ) ∥ ( Pnormal p2 ) ❘# 1 Ppar 2 prec 50 ❙
    samePlane: P ⟶ P ⟶ bool ❘ = [ p1 , p2] ( Pbase p1 VonP  p2 ) ∧ ( p1 Ppar p2 )❘# Psame 1 2❙
    collidePlane : P ⟶ P ⟶ bool ❘ = [ A ,B ] ( ¬ A Ppar  B ) ∨ Psame A B ❘ #  colP 1 2 ❙

    collisionLine: {A, B } ⊦ colP A B ⟶ ⊦ ¬ Psame A B ⟶ L ❘ # colPPL 1 2 3 4❙
    collisionLineAxiom: {A, B, p1 ,p2} ⊦ ( ( colPPL A B p1 p2 ) LonP A ) ∧( ( colPPL A B p1 p2 ) LonP B )❙
❚
