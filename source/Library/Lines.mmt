namespace http://BenniDoes.Stuff/ ❚
import mitm http://mathhub.info/MitM/Foundation ❚
import arith http://mathhub.info/MitM/smglom/arithmetics ❚

theory Lines : http://mathhub.info/MitM/Foundation?Math =
    include ?Vector ❙
    // include ?Planes ❙

    // point: V ❙
    // direction: V ❙
    line : type ❘ # L ❙
    lineOf : V ⟶ V ⟶ L ❘ # Lof 1 2 ❙
    lineDirection: L ⟶ V ❘ # Ldir 1 ❙
    lineDirection_rule: {v, w} ⊦ lineDirection (Lof v w) ≐ norm ( w ⁻ v ) ❘ role ForwardRule ❙
    basepoint : L ⟶ V ❘ # Lbase  1 ❙
    basepoint_rule: {v, w} ⊦ basepoint (Lof v w) ≐ v ❘ role ForwardRule ❙

    onLine : L ⟶ V ⟶ bool ❘ # 2 VonL 1  ❙
    buildLine : V ⟶ V ⟶ V ⟶ bool ❘ = [A,B,C] A VonL ( Lof B C)  ❘ # ∖ 1 2 3  ❙
    sameLine: L ⟶ L ⟶ bool ❘ = [A ,B] ( Lbase( B ) VonL A ) ∧ ( ( Ldir B ) ∥ ( Ldir A ) ) ❘ # Lsame 1 2❙
    collideLine: L ⟶ L ⟶ bool ❘ = [A,B] ∃ [v] ( v VonL A ) ∧ ( v VonL B ) ❘ # colL 1 2 ❙
    parallelLine: L ⟶ L ⟶ bool ❘ = [A,B] Ldir A ∥ Ldir B ❘ # paraL 1 2 ❙
    // pointOfIntersection = [A :L , B: L , p1 : ⊦ colL A B, p2 : ⊦ ¬ sameL A B] OV ❙
    pointOfIntersection : {A ,B } ( ⊦ colL A B ) ⟶ ( ⊦ ¬ Lsame A B ) ⟶ V ❘ # colLV 1 2 3 4  ❙
    pointOfIntersectionAxiom: {A, B, p1, p2} ⊦ ( ( colLV A B  p1  p2) VonL A ) ∧ ( ( colLV A B  p1 p2 ) VonL B  )❙

❚

theory InterceptTheorem : http://mathhub.info/MitM/Foundation?Math =
    include ?Lines ❙
    // naming like the images on
    https://en.wikipedia.org/wiki/Intercept_theorem ❙

    S : V ❙
    A : V ❙
    B : V ❙
    C : V ❙
    D : V ❙
    line1 : ⊦ ∖ S A B ❙
    line2 : ⊦ ∖ S C D ❙
    twolines: ⊦  ¬ (A ⁻ B) ∥ (C ⁻ D) ❙
    par : ⊦ (A ⁻ C) ∥ (B ⁻ D) ❙

    ratio1: ⊦ (d S A ) / (d A B) ≐ (d S C) / (d C D) ❙
    ratio2: ⊦ (d S A ) / (d S B) ≐ (d S C) / (d S D) ❙
    ratio3: ⊦ (d S A ) / (d S B) ≐ (d A C) / (d B D) ❙
    ratio4: ⊦ (d S C ) / (d S D) ≐ (d A C) / (d B D) ❙
❚