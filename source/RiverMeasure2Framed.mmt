namespace http://BenniDoes.Stuff/ ❚
//
A
|\~~~~~~~~
|~\~~~~~~
|__\___F
B  C\  |
     \ |
      \|
       E
❚


theory problemTheoryRiver2 : http://BenniDoes.Stuff/?BenniDoesStuff =


    av : V ❙
    bv : V ❙
    cv : V ❙
    ev : V ❙
    fv : V ❙

    distance_b_c_value : ℝ ❙
    distance_b_c: ⊦ ( d bv cv ) ≐ distance_b_c_value ❙

    distance_c_f_value: ℝ ❙
    distance_c_f: ⊦ ( d cv fv ) ≐ ( distance_c_f_value ) ❙

    distance_e_f_value : ℝ ❙
    distance_e_f: ⊦ ( d ev fv ) ≐ distance_e_f_value ❙


    buildLineProof_a_c_e: ⊦ ( ∖ av cv ev) ❙
    buildLineProof_b_c_f: ⊦ ( ∖ bv cv fv) ❙
    proofLinesnotSame: ⊦ ¬ ( (av ⁻ ev) ∥ (bv ⁻ fv) ) ❙

    parallelHeightsProof: ⊦ (av ⁻ bv) ∥ (ev ⁻ fv) ❙
❚

theory situationTheroryRiver2 : http://BenniDoes.Stuff/?BenniDoesStuff =

    sa: V ❙
    sb: V ❙
    sc: V ❙
    se: V ❙
    sf: V ❙

    sdistance_b_c_value = 5.0 ❙
    sdistance_b_c: ⊦ ( d sb sc ) ≐ sdistance_b_c_value ❙

    sdistance_c_f_value = 5.0 ❙
    sdistance_c_f: ⊦ ( d sc sf ) ≐ sdistance_c_f_value ❙

    sdistance_e_f_value = 1.0 ❙
    sdistance_e_f: ⊦ ( d se sf ) ≐ sdistance_e_f_value ❙




    sbuildLineProof_a_c_e: ⊦ ( ∖ sa sc se) ❙
    sbuildLineProof_b_c_f: ⊦ ( ∖ sb sc sf) ❙
    sproofLinesnotSame: ⊦ ¬ ( (sa ⁻ se) ∥ (sb ⁻ sf) ) ❙

    sparallelHeightsProof: ⊦ (sa ⁻ sb) ∥ (se ⁻ sf) ❙


❚

theory solutionTheroryRiver2 : http://BenniDoes.Stuff/?BenniDoesStuff =
    include ?problemTheoryRiver2 ❙

    distance_a_b_value : ℝ ❘ =  distance_b_c_value ⋅ distance_e_f_value / distance_c_f_value ❙
    distance_a_b: ⊦ ( d av bv ) ≐ distance_a_b_value ❙

❚

view situationProblemViewRiver2 : ?problemTheoryRiver2 -> ?situationTheroryRiver2 =
    av = sa ❙
    bv = sb ❙
    cv = sc ❙
    ev = se ❙
    fv = sf ❙

    distance_b_c_value = sdistance_b_c_value  ❙
    distance_b_c = sdistance_b_c ❙

    distance_c_f_value = sdistance_c_f_value  ❙
    distance_c_f = sdistance_c_f ❙

    distance_e_f_value = sdistance_e_f_value ❙
    distance_e_f = sdistance_e_f ❙


    buildLineProof_a_c_e = sbuildLineProof_a_c_e ❙
    buildLineProof_b_c_f = sbuildLineProof_b_c_f ❙
    proofLinesnotSame = sproofLinesnotSame ❙

    parallelHeightsProof = sparallelHeightsProof ❙

❚